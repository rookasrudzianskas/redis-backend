export declare type Point = {
    longitude: number;
    latitude: number;
};
export interface Field {
    type: string;
    alias?: string;
}
export interface Sortable {
    sortable?: boolean;
}
export interface Separable {
    separator?: string;
}
export interface NumberField extends Field, Sortable {
    type: 'number';
}
export interface StringField extends Field, Sortable, Separable {
    type: 'string';
}
export interface TextField extends Field, Sortable {
    type: 'text';
}
export interface BooleanField extends Field, Sortable {
    type: 'boolean';
}
export interface PointField extends Field {
    type: 'point';
}
export interface DateField extends Field, Sortable {
    type: 'date';
}
export interface StringArrayField extends Field, Separable {
    type: 'string[]';
}
export declare type FieldDefinition = StringField | TextField | NumberField | BooleanField | PointField | DateField | StringArrayField;
export declare type SchemaDefinition = Record<string, FieldDefinition>;
export declare type IdStrategy = () => string;
export declare type StopWordOptions = 'OFF' | 'DEFAULT' | 'CUSTOM';
