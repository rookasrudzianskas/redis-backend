import Entity from "../entity/entity";
import { Search } from "./search";
import WhereField from "./where-field";
export default class WhereString<TEntity extends Entity> extends WhereField<TEntity> {
    private value;
    eq(value: string | number | boolean): Search<TEntity>;
    equal(value: string | number | boolean): Search<TEntity>;
    equals(value: string | number | boolean): Search<TEntity>;
    equalTo(value: string | number | boolean): Search<TEntity>;
    match(_: string | number | boolean): Search<TEntity>;
    matches(_: string | number | boolean): Search<TEntity>;
    matchExact(_: string | number | boolean): Search<TEntity>;
    matchExactly(_: string | number | boolean): Search<TEntity>;
    matchesExactly(_: string | number | boolean): Search<TEntity>;
    get exact(): WhereString<TEntity>;
    get exactly(): WhereString<TEntity>;
    toString(): string;
    private throwMatchExcpetion;
    private throwMatchExcpetionReturningThis;
}
