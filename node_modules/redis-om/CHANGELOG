# Changelog

*Functional* changes to the public interface of Redis OM for Node.js will be listed here, by version. *Non-functional* changes may also be included, if they are particulary noteworthy or might impact developers using Redis OM.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/), and Redis OM adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## 0.2.1 - 2022-03-30
### Added
- Added limited ability to sort search results using `.sortBy`.
- Added `.min` and `.max` which returns the `Entity` with the minimum or maximum value for a provided field.

## 0.2.0 - 2022-02-25
### Added
- Added 'point' data type that represents a spot on the globe.
- Added 'date' data type with UNIX, ISO-8601, and JavaScript flavors.
- Perform radius searches on 'point' data type using `.inRadius`.
- Perform searches on 'date' data type using `.before`, `.after`, etc.
- Issue raw RediSearch commands using `Repository.searchRaw`.
- Attach existing Node Redis connections using `Client.use`. Handy if you need to do raw Redis stuff too!
- Added `.keyName` property on `Entity` that lets you to get the Redis keyname storing that `Entity`.
- Added `.expire` method to `Repository` allowing you to expire an `Entity`.

### Changed
- String fields and searches can now be set to numbers or booleans and will be coerced to a string.
- Calls to `.createIndex` will automatically reindex if the index has changed and will do nothing if the index has not changed.
- *Breaking Change*: Changed 'array' type in Schema definitions to 'string[]' in preparation for adding other types of arrays.
- *Breaking Change*: Split 'string' type into 'string' and 'text' types, representing string values that support `.eq` searches and text values that support `.match` searches.
- *Breaking Change*: Removed the `textSearch` property from strings as it was no longer needed with 'string' and 'text' types replacing it.
- *Breaking Change*: Schema data structure now defaults to JSON instead of HASH.

### Fixed
- Wildcard searches on text fields no longer fail.
- Tag searches now escape slash and backslash characters.

### Removed
- *Breaking Change*: `Repository` constructor cannot be directly called. Use `client.fetchRepository` instead.


## 0.1.7 - 2022-01-07
### Added
- Added .isOpen() to Client

### Changed
- Client no longer errors when opened or closed if already opened or closed.
- Update table of contents in README.


## 0.1.6 - 2022-01-05
### Added
- Added .return.first() and .returnFirst() methods to search. Sometimes you really can eat just one.

### Fixed
- Entity now has a better default JSON serialization output.


## 0.1.5 - 2021-12-23
### Added
- Added ability to pass in initial values when creating an Entity with .createEntity.
- Added .createAndSave method to Repository that does exactly what you think it does.

### Changed
- More fluent interface on .return.all(), return.page(), and return.count() on Search.
- Replace .return with .returnPage in Search class.


## 0.1.4 - 2021-12-17
### Added
- This CHANGELOG file because communicating changes matters.
- Ability to specify and override default stop word behavior when defining a Schema.

### Fixed
- Doing an exact match with a stop word used to generate a cryptic error. RediSearch does not permit searching for stop words within an exact match. This error was captured, and a better error is presented that directs the user to either change their stop words or not use stop words in their query.
